
# services:
#   flutter-android:
#     build:
#       context: .
#       dockerfile: docker/Dockerfile.android
#     volumes:
#       - .:/app
#       - pub_cache:/root/.pub-cache
#       - gradle_cache:/root/.gradle
#     working_dir: /app
#     # Requis si tu signes côté conteneur (keystore dans ./android)
#     environment:
#       - ANDROID_SDK_ROOT=/opt/android-sdk
#       - PUB_CACHE=/root/.pub-cache
#       - GRADLE_USER_HOME=/root/.gradle
#     # Donne l'accès réseau (utile pour `flutter pub get`)
#     network_mode: "host"
#     # depends_on:
#     #   - sonarqube   # pour s'assurer que Sonar démarre si tu veux analyser ton code depuis ce conteneur

# # Base de données PostgreSQL pour SonarQube
#   sonardb:
#     image: postgres:15
#     container_name: sonardb
#     environment:
#       - POSTGRES_USER=sonar
#       - POSTGRES_PASSWORD=sonar
#       - POSTGRES_DB=sonar
#     volumes:
#       - sonardb_data:/var/lib/postgresql/data
#     restart: always

#   # SonarQube Server
#   sonarqube:
#     image: sonarqube:latest
#     container_name: sonarqube
#     ports:
#       - "9000:9000"
#     environment:
#       - SONAR_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
#       - SONAR_JDBC_USERNAME=sonar
#       - SONAR_JDBC_PASSWORD=sonar
#     depends_on:
#       - sonardb
#     volumes:
#       - sonarqube_data:/opt/sonarqube/data
#       - sonarqube_extensions:/opt/sonarqube/extensions
#       - sonarqube_logs:/opt/sonarqube/logs
#     restart: always

# volumes:
#   pub_cache:
#   gradle_cache:
#   sonardb_data:
#   sonarqube_data:
#   sonarqube_extensions:
#   sonarqube_logs: