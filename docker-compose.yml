

services:
  # --- MySQL (DB API) ---
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: movem8
      MYSQL_USER: movem8-N3x@@!
      MYSQL_PASSWORD: Mov3m8!DB-2025
      MYSQL_ROOT_PASSWORD: rootpwd
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h127.0.0.1 -uroot -prootpwd --silent"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- MongoDB (DB NoSQL) ---
  mongodb:
    image: mongo:7
    container_name: movem8-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpwd-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "mongosh --username root --password rootpwd-mongo --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")'"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- Backend Spring Boot ---
  backend:
    build:
      context: ./backend-java #./movem8
      dockerfile: Dockerfile
    container_name: movem8-backend
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/upload
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/movem8?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: movem8-N3x@@!
      SPRING_DATASOURCE_PASSWORD: Mov3m8!DB-2025
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect

      SPRING_DATA_MONGODB_URI: mongodb://movem8_app:Mov3m8!Mongo-2025@mongodb:27017/movem8?authSource=admin

      # optionnel:
      # SPRING_PROFILES_ACTIVE: prod

  # --- Frontend Flutter Web (servi par Nginx) ---
  # frontend:
  #   build:
  #     context: ./frontend-flutter #./move-m8
  #     dockerfile: Dockerfile
  #   container_name: movem8-frontend
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     backend:
  #       condition: service_started
  #   restart: unless-stopped
    

  # --- Postgres (DB SonarQube) ---
  sonardb:
    image: postgres:15
    container_name: sonardb
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonardb_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonar -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- SonarQube ---
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    depends_on:
      sonardb:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonardb:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: unless-stopped

  # --- Jenkins (master) ---
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    restart: unless-stopped
    ports:
      - "8081:8080"     
      - "50000:50000"   
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  
    depends_on:
      sonarqube:
        condition: service_started

volumes:
  mysqldata:
  sonardb_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  jenkins_home:
  mongodata:

