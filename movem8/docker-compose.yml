services:
  # --- Base de données de ton API ---
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: movem8db
      MYSQL_USER: movem8
      MYSQL_PASSWORD: movem8pwd
      MYSQL_ROOT_PASSWORD: rootpwd
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -hmysql -uroot -prootpwd --silent"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- Ton backend Spring Boot ---
  api:
    build: ./
    container_name: api
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/movem8db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: movem8
      SPRING_DATASOURCE_PASSWORD: movem8pwd
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect

  # --- Base de données SonarQube ---
  sonardb:
    image: postgres:15
    container_name: sonardb
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonardb_data:/var/lib/postgresql/data
    restart: always

  # --- Serveur SonarQube ---
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonardb:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - sonardb
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: always

  # --- Jenkins ---
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    privileged: true
    restart: unless-stopped
    ports:
      - "8081:8080"    # Jenkins dispo sur http://localhost:8081
      - "50000:50000" # Agent JNLP
    volumes:
      # Utilise un volume nommé (simple) OU dé-commente le bind mount si tu veux un chemin précis
      - jenkins_home:/var/jenkins_home
      # - /home/${myname}/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mysqldata:
  sonardb_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  jenkins_home:
